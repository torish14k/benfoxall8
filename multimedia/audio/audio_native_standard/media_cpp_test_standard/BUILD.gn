# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//test/xts/tools/build/suite.gni")
module_output_path = "hit/ActsMediaCppStandardTest"

###############################################################################
config("media_cpp_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include",
    "//multimedia/media_standard/frameworks/innerkitsimpl/native/player/include",
  ]
}

ohos_moduletest_suite("ActsMediaCppStandardTest") {
  module_out_path = module_output_path
  sources = [
    "recorder/src/fuction/ActsVideoRecorderTest.cpp",
    "recorder/src/fuction/ActsAudioRecoederTest.cpp",
    "player/Testplayer.cpp",
    "player/src/function/ActsPlayerFuncTest.cpp",
    "player/src/function/ActsPlayerFuncAsyncTest.cpp",
    "player/src/function/ActsPlayerStateTest.cpp",
    "player/src/function/ActsPlayerStateAsyncTest.cpp",
    "player/src/api/01.SetSource.cpp",
    "player/src/api/02.Prepare.cpp",
    "player/src/api/03.Play.cpp",
    "player/src/api/04.Pause.cpp",
    "player/src/api/05.Stop.cpp",
    "player/src/api/06.Reset.cpp",
    "player/src/api/07.Seek.cpp",
    "player/src/api/08.SetVolume.cpp",
    "player/src/api/09.SetLooping.cpp",
    "player/src/api/10.SetPlaybackSpeed.cpp",
    "player/src/api/11.PrepareAsync.cpp",
    "player/src/api/12.GetCurrentTime.cpp",
  ]
  include_dirs = [
      "include",
      "player/include",
      "recorder/include",
      "//base/startup/syspara_lite/interfaces/innerkits/native/syspara/include",
  ]
  cflags = [
    "-Wall"
    ]
  cflags_cc = cflags
  deps = [
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/graphic/standard:libwms_client",
    "//third_party/googletest:gtest_main",
    "//base/startup/syspara_lite/interfaces/innerkits/native/syspara:syspara",
  ]
  external_deps = [
    "ipc:ipc_core",
    "multimedia_media_standard:media_client",
  ]
  configs = [ ":media_cpp_config" ]
}
